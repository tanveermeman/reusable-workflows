name: Build Reusable Workflow

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true 
    inputs:
      ecr_repo_var:
        required: true
        type: string
    outputs: 
      ecr_registry:
        description: "ECR Registry URL"
        value: ${{ jobs.build-image.outputs.ecr_registry }}
      image_tag:
        description: "Image Tag"
        value: ${{ jobs.build-image.outputs.image_tag }}
      ecr_repo_var:
        description: "ECR Repository Name"
        value: ${{ jobs.build-image.outputs.ecr_repo_var }}

jobs:
  build-image:
    name: Build and Push Image
    runs-on: self-hosted
    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}
      image_tag: ${{ steps.commit.outputs.short }}
      ecr_repo_var: ${{ inputs.ecr_repo_var }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug ECR Registry
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "Registry set to env is: $ECR_REGISTRY"

      - name: Print inputs
        run: |
          echo "ecr_repo_var is: ${{ inputs.ecr_repo_var }}"  

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}  # Use short SHA for image tag

        run: |
          docker build -t $ECR_REGISTRY/${{ inputs.ecr_repo_var }}:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/${{ inputs.ecr_repo_var }}:$IMAGE_TAG


    # outputs:
    #   ecr_registry: ${{ steps.login-ecr.outputs.registry }}
    #   image_tag: ${{ steps.commit.outputs.short }}
